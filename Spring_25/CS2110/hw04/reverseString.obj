LC-3 OBJ FILE

.TEXT
3000
24
5020
2215
1440
6680
0402
1021
0FFB
54A0
163F
98FF
1921
1884
0609
1A42
6D40
1E43
69C0
7940
7DC0
14A1
16FF
0FF3
F025
4000
4000
6
0068
0065
006C
006C
006F
0000

.SYMBOL
ADDR | EXT | LABEL
3002 |   0 | LOOP
3007 |   0 | WHILE_DONE
3009 |   0 | SWAP_LOOP
3016 |   0 | SWAP_DONE
3017 |   0 | STRING

.LINKER_INFO

.DEBUG
# DEBUG SYMBOLS FOR LC3TOOLS

LABEL      | INDEX
LOOP       |   735
WHILE_DONE |   974
SWAP_LOOP  |  1092
SWAP_DONE  |  1589
STRING     |  1708
====================
LINE | ADDR | SOURCE
   0 | ???? | ;;=============================================================\n
   1 | ???? | ;; CS 2110 - Spring 2025\n
   2 | ???? | ;; Homework 4 - Reverse String \n
   3 | ???? | ;;=============================================================\n
   4 | ???? | ;; Name: Nicholas Stone\n
   5 | ???? | ;;=============================================================\n
   6 | ???? | \n
   7 | ???? | .orig x3000\n
   8 | ???? | ;; Suggested Pseudocode (see PDF for explanation)\n
   9 | ???? | ;;\n
  10 | ???? | ;; int length = 0;\n
  11 | ???? | ;; while (STRING[length] != 0) {\n
  12 | ???? | ;;      length++;\n
  13 | ???? | ;; }\n
  14 | ???? | ;;\n
  15 | ???? | ;;\n
  16 | ???? | ;; int start = 0;\n
  17 | ???? | ;; int end = length - 1;\n
  18 | ???? | \n
  19 | ???? | ;; while (start < end) {\n
  20 | ???? | ;;      char temp = STRING[start];\n
  21 | ???? | ;;      STRING[start] = STRING[end];\n
  22 | ???? | ;;      STRING[end] = temp;\n
  23 | ???? | \n
  24 | ???? | ;;      start++;\n
  25 | ???? | ;;      end--;\n
  26 | ???? | ;;}\n
  27 | ???? | \n
  28 | ???? | ;; YOUR CODE HERE\n
  29 | 3000 | AND R0, R0, #0          ; R0 = 0, length = 0\n
  30 | 3001 | LD R1, STRING           ; Load STRING to R1\n
  31 | ???? | \n
  32 | ???? | LOOP         ; iterates until loop reaches /0\n
  33 | 3002 |     ADD R2, R1, R0      ; R2 = address of STRING\n
  34 | 3003 |     LDR R3, R2, #0      ; R3 = STRING\n
  35 | 3004 |     BRz WHILE_DONE      ; If /0, exit to WHILE_DONE\n
  36 | 3005 |     ADD R0, R0, #1      ; length adding 1\n
  37 | 3006 |     BR LOOP\n
  38 | ???? | WHILE_DONE\n
  39 | 3007 |     AND R2, R2, #0      ; start index goes back to 0\n
  40 | 3008 |     ADD R3, R0, #-1     ; end becomes length (R0) - 1\n
  41 | ???? | SWAP_LOOP\n
  42 | 3009 |     NOT R4, R3\n
  43 | 300A |     ADD R4, R4, #1      ; 2\'s complements R4\n
  44 | 300B |     ADD R4, R2, R4      ; R4 = start - end\n
  45 | 300C |     BRzp SWAP_DONE      ; If positive or zero, exit to swap_done\n
  46 | 300D |     ADD R5, R1, R2      ; R5 = address of STRING[start]\n
  47 | 300E |     LDR R6, R5, #0      ; R6 = STRING[start]\n
  48 | 300F |     ADD R7, R1, R3      ; R7 = address of STRING[end]\n
  49 | 3010 |     LDR R4, R7, #0      ; R4 = STRING[end]\n
  50 | 3011 |     STR R4, R5, #0\n
  51 | 3012 |     STR R6, R7, #0\n
  52 | 3013 |     ADD R2, R2, #1      ; R2 + 1\n
  53 | 3014 |     ADD R3, R3, #-1     ; R3 - 1\n
  54 | 3015 |     BR SWAP_LOOP\n
  55 | ???? | SWAP_DONE\n
  56 | 3016 |     HALT\n
  57 | ???? | \n
  58 | ???? | ;; Do not rename or remove any existing labels\n
  59 | ???? | ;; You may change the value of LENGTH for debugging\n
  60 | 3017 | STRING .fill x4000\n
  61 | ???? | .end\n
  62 | ???? | \n
  63 | ???? | ;; You may change the value of the string for debugging\n
  64 | ???? | .orig x4000              ; head to x4000 for result\n
  65 | 4000 |     .stringz \"hello\"\n
  66 | ???? | .end\n
  67 | ???? | 
====================
